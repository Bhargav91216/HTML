import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class JSONKeyPrinter {
    public static void main(String[] args) {
        String jsonString = "{\n" +
                "  \"key1\": \"value1\",\n" +
                "  \"key2\": \"value2\",\n" +
                "  \"key3\": {\n" +
                "    \"nestedKey1\": \"nestedValue1\",\n" +
                "    \"nestedKey2\": \"nestedValue2\"\n" +
                "  },\n" +
                "  \"key4\": [\n" +
                "    \"arrayValue1\",\n" +
                "    \"arrayValue2\",\n" +
                "    {\n" +
                "      \"nestedKey3\": \"nestedValue3\"\n" +
                "    }\n" +
                "  ]\n" +
                "}";
        try {
            JSONObject json = new JSONObject(jsonString);
            printKeys(json);
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }

    private static void printKeys(JSONObject jsonObject) {
        for (String key : jsonObject.keySet()) {
            System.out.println(key);
            Object value = jsonObject.get(key);
            if (value instanceof JSONObject) {
                printKeys((JSONObject) value); // Recursively call printKeys for nested JSON objects
            } else if (value instanceof JSONArray) {
                JSONArray jsonArray = (JSONArray) value;
                for (int i = 0; i < jsonArray.length(); i++) {
                    Object arrayValue = jsonArray.get(i);
                    if (arrayValue instanceof JSONObject) {
                        printKeys((JSONObject) arrayValue); // Recursively call printKeys for nested JSON objects in arrays
                    }
                }
            }
        }
    }
}
